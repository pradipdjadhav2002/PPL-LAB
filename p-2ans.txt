Answers
-------

1. If-blocks are turned into conditional gotos to labels. Unconditional gotos
   are a goto by themselves on a line. Conditional gotos always have two labels
   for the taken and not-taken branches.

2. It's a bit easier to see the control flow in this representation, but
   slightly less concise in terms of number of lines.


Additional Answer
-----------------

Code:

void f() {
  int a = 1, b = 2, c = 3, x;
  x = a ? b : c;
}

CFG:

;; Function f (f, funcdef_no=0, decl_uid=1703, cgraph_uid=0)

f ()
{
  int x;
  int c;
  int b;
  int a;
  int iftmp.0;

<bb 2>:
  a = 1;
  b = 2;
  c = 3;
  if (a != 0)
    goto <bb 3>;
  else
    goto <bb 4>;

<bb 3>:
  iftmp.0 = b;
  goto <bb 5>;

<bb 4>:
  iftmp.0 = c;

<bb 5>:
  x = iftmp.0;
  return;

}

Answer: It breaks it into conditional gotos, whose control flow both go into a
single BB (bb 5 in this case) for assignment to the result. This dump seems to
suggest that the CFG is not quite the SSA I am used to seeing (e.g. would expect
something like iftmp.0, iftmp.1 in the different branches and a phi-node at the
joining BB).